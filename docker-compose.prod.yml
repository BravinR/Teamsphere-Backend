services:
  spring-app:
    image: bravinr/teamsphere:${IMAGE_VERSION}
    restart: unless-stopped
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - mysql
      - rabbitmq
    expose:
      - "5454"
  mysql:
    image: mysql:latest
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_USER_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
  rabbitmq:
    image: rabbitmq:management
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    command: >
      bash -c "rabbitmq-plugins enable rabbitmq_stomp && rabbitmq-server"
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./web-build:/etc/nginx/web-build:ro
      - ./letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - spring-app
  loki:
    container_name: loki
    image: grafana/loki:2.9.3
    restart: unless-stopped
    expose:
      - "3100"
    volumes:
      - ./loki/config/loki-config.yaml:/etc/loki/loki-config.yaml
      - ./loki/data:/data/loki
    command: -config.file=/etc/loki/loki-config.yaml
  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    user: "0"
    expose:
      - "3000"
    environment:
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/config/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
  promtail:
    container_name: promtail
    image: grafana/promtail:2.9.3
    restart: unless-stopped
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail/config/promtail-config.yaml:/etc/promtail/promtail-config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/promtail-config.yaml
    depends_on:
      - loki
volumes:
  mysql_data: